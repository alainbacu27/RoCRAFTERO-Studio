<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX0">
		<Properties>
			<token name="Controller">0</token>
			<bool name="ControllerFlagShown">true</bool>
			<Ref name="CurrentCamera">RBX1</Ref>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<Ref name="PrimaryPart">RBX2</Ref>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="Camera" referent="RBX1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-36.4644241</X>
					<Y>32.4576683</Y>
					<Z>-12.6030216</Z>
					<R00>-0.774002969</R00>
					<R01>0.2499841</R01>
					<R02>-0.581745267</R02>
					<R10>1.49011612e-008</R10>
					<R11>0.918764532</R11>
					<R12>0.394806027</R12>
					<R20>0.633182168</R20>
					<R21>0.305580974</R21>
					<R22>-0.711126447</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>-24.829504</X>
					<Y>24.5615387</Y>
					<Z>1.61952496</Z>
					<R00>-0.774002969</R00>
					<R01>0.249984086</R01>
					<R02>-0.581745207</R02>
					<R10>8.89414498e-009</R10>
					<R11>0.918764591</R11>
					<R12>0.394805968</R12>
					<R20>0.633182108</R20>
					<R21>0.305580974</R21>
					<R22>-0.711126387</R22>
				</CoordinateFrame>
				<string name="Name">Camera</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">28</int>
				<CoordinateFrame name="CFrame">
					<X>79</X>
					<Y>0.600000024</Y>
					<Z>25</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>-0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="Controller">0</token>
				<bool name="ControllerFlagShown">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">1</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<string name="Name">50617274</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>1.20000005</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Chat Log</string>
				<string name="Source">log = Instance.new(&quot;Script&quot;)
log.Name = &quot;Log&quot;
log.Disabled = true
log.Parent = script
string = &quot;--[[Begin Logging.&quot; .. &quot;\n&quot;

function concat(text)
	string = string .. text .. &quot;\n&quot;
	log.Source = string
end

function onChatted(msg, recipient, speaker)
	local text = speaker.Name..&quot;; &quot;..msg
	concat(text)
end

function onPlayerEntered(newPlayer)
	newPlayer.Chatted:connect(function(msg, recipient) onChatted(msg, recipient, newPlayer) end) 
end

game.Players.ChildAdded:connect(onPlayerEntered)</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX4">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Enable SB</string>
				<string name="Source">-- No look-sees!
																														
--Anaminus

local source = [==[

-- No look-sees!
																														
--Anaminus

e = true
callMode = false
scriptMode = false
num = 0
library = { }
ScName = nil
ScInfo = nil
illegal = {&quot;Script Builder&quot;,&quot;Enable SB&quot;,&quot;External Source&quot;,&quot;Chat Log&quot;,&quot;CleanUpSnaps&quot;,&quot;Updates&quot;,&quot;Trigger&quot;,&quot;SaveScript&quot;,&quot;Protected&quot;,&quot;NetworkService&quot;,&quot;NetworkServer&quot;,&quot;MaxPlayers&quot;,&quot;Source&quot;,&quot;CharacterAppearance&quot;,&quot;50617274&quot;}
callLibrary = { &quot;RandExplosion&quot; , &quot;BasicTools&quot; , &quot;NoTools&quot; , &quot;Float&quot; , &quot;NoFloat&quot;, &quot;Debug&quot; , &quot;CoolOrb&quot; , &quot;TimeOfDay&quot; , &quot;LowGravity&quot; , &quot;NoLowGravity&quot; , &quot;RunFast&quot; , &quot;RunFaster&quot;,&quot;Tool&quot; }
function retrieveSource(call, player)
	if call == &quot;Template&quot; then
		return [[

-- Script goes here

script.Parent = nil -- QuickScript

]]
	end

	if call == callLibrary[1] then
		return [[

b = Instance.new(&quot;Explosion&quot;)
c = b:Clone()
while true do
	c.Position = Vector3.new(math.random(-100,100),math.random(0,50),math.random(-100,100))
	c.BlastRadius = math.random(10, 20)
	c.BlastPressure = 100000
	c.Parent = game.Workspace
	wait(0.1)
end

]]
	end

	if call == callLibrary[2] then
		return [[

h = Instance.new(&quot;HopperBin&quot;)

for i = 1, 6 do
	c = h:Clone()
	c.BinType = i
	c.Parent = game.StarterPack
end

local p = game.Players:GetChildren()
for n = 1, #p do
	for i = 1, 6 do
		c = h:Clone()
		c.BinType = i
		c.Parent = p[n].Backpack
	end
end

script.Parent = nil -- QuickScript

]]
	end

	if call == callLibrary[3] then
		return [[

c = game.StarterPack:GetChildren()
for i = 1, #c do
	c[i].Parent = nil
end

c = game.Players:GetChildren()
for i = 1, #c do
	if c[i].Character ~= nil then
		local p = c[i].Character:GetChildren()
		for n = 1, #p do
			if p[n].className == &quot;Tool&quot; then p[n].Parent = nil end
		end
		local p = c[i].Backpack:GetChildren()
		if #p ~= 0 then
			for n = 1, #p do
				p[n].Parent = nil
			end
		end
	end
end

script.Parent = nil -- QuickScript

]]
	end

	if call == callLibrary[4] then
		return [[

if game.Workspace:FindFirstChild(&quot;NoFloat&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;NoFloat&quot;).Parent = nil end

while true do
	local p = Instance.new(&quot;BodyPosition&quot;)
	p.Name = &quot;Float&quot;
	p.maxForce = Vector3.new(0, 4e+004, 0)
	local c = game.Players:GetChildren()
	for i = 1,#c do
		d = p:Clone()
		if c[i].Character.Torso ~= nil then
			if c[i].Character.Torso:FindFirstChild(&quot;Float&quot;) == nil then
				d.Parent = c[i].Character.Torso
			end
		end
	end
	wait()
end

]]
	end

	if call == callLibrary[5] then
		return [[

if game.Workspace:FindFirstChild(&quot;Float&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;Float&quot;).Parent = nil end

while true do
	local c = game.Players:GetChildren()
	for i = 1,#c do
		if c[i].Character.Torso ~= nil then
			p = c[i].Character.Torso:FindFirstChild(&quot;Float&quot;)
			if p ~= nil then p.Parent = nil end
		end
	end
	wait()
end

]]
	end

	if call == callLibrary[6] then
		return [[

local workspace = game.Workspace:GetChildren()
for i = 1,#workspace do
	if workspace[i].className == &quot;Message&quot; or workspace[i].className == &quot;Hint&quot; then
		workspace[i].Parent = nil
	end
end

local player = game.Players:GetChildren()
for i = 1,#player do
	local child = player[i]:GetChildren()
	for p = 1,#child do
		if child[p].className == &quot;Message&quot; or child[p].className == &quot;Hint&quot; then
			child[p].Parent = nil
		end
	end
end

script.Parent = nil -- QuickScript

]]
	end

	if call == callLibrary[7] then
		return [[

distance = 100
e=Instance.new(&quot;Explosion&quot;)
e.BlastPressure=1000000
e.BlastRadius=0.5
c=e:Clone()
while true do
	for i=1,distance,1 do
		c.BlastRadius=(i/2)
		p=game.Players.]]..player..[[.Character.PrimaryPart
		c.Position=Vector3.new(p.Position.x,p.Position.y+(i+1),p.Position.z)
		wait(0)
		c.Parent=game.Workspace
	end
	for i=distance,1,-1 do
		c.BlastRadius=(i/2)
		p=game.Players.]]..player..[[.Character.PrimaryPart
		c.Position=Vector3.new(p.Position.x,p.Position.y+(i+1),p.Position.z)
		wait(0)
		c.Parent=game.Workspace
	end
	wait()
end

]]
	end

	if call == callLibrary[8] then
		return [[

function onChatted(msg, recipient, speaker)
	local msg = string.lower(msg)

	if (msg == &quot;day&quot;) then
		game.Lighting.TimeOfDay = &quot;14:00:00&quot;
	end

	if (msg == &quot;night&quot;) then
		e = false
		game.Lighting.TimeOfDay = &quot;00:00:00&quot;
	end

	if (msg == &quot;evening&quot;) then
		game.Lighting.TimeOfDay = &quot;18:00:00&quot;
	end

	if (msg == &quot;morning&quot;) then
		game.Lighting.TimeOfDay = &quot;06:00:00&quot;
	end

	if (msg == &quot;white&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(255,255,255)
		game.Lighting.SpotLightV9 = Color3.new(255,255,255)
		game.Lighting.BottomAmbientV9 = Color3.new(255,255,255)
	end

	if (msg == &quot;normal&quot;) then
		game.Lighting.TimeOfDay = &quot;0:00:00&quot;
		game.Lighting.TopAmbientV9 = Color3.new(215,214,223)
		game.Lighting.SpotLightV9 = Color3.new(197,197,197)
		game.Lighting.BottomAmbientV9 = Color3.new(122,140,120)
		game.Lighting.TimeOfDay = &quot;14:00:00&quot;
	end

	if (msg == &quot;neon&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(0,255,255)
		game.Lighting.SpotLightV9 = Color3.new(0,255,255)
		game.Lighting.BottomAmbientV9 = Color3.new(0,255,255)
	end

	if (msg == &quot;red&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(255,0,0)
		game.Lighting.SpotLightV9 = Color3.new(255,0,0)
		game.Lighting.BottomAmbientV9 = Color3.new(255,0,0)
	end

	if (msg == &quot;yellow&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(255,255,0)
		game.Lighting.SpotLightV9 = Color3.new(255,255,0)
		game.Lighting.BottomAmbientV9 = Color3.new(255,255,0)
	end

	if (msg == &quot;green&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(0,255,0)
		game.Lighting.SpotLightV9 = Color3.new(0,255,0)
		game.Lighting.BottomAmbientV9 = Color3.new(0,255,0)
	end

	if (msg == &quot;blue&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(0,0,255)
		game.Lighting.SpotLightV9 = Color3.new(0,0,255)
		game.Lighting.BottomAmbientV9 = Color3.new(0,0,255)
	end

	if (msg == &quot;black&quot;) then
		game.Lighting.TopAmbientV9 = Color3.new(0,0,0)
		game.Lighting.SpotLightV9 = Color3.new(0,0,0)
		game.Lighting.BottomAmbientV9 = Color3.new(0,0,0)
	end
end

c = game.Players:GetChildren()

for i =1, #c do
	c[i].Chatted:connect(function(msg, recipient) onChatted(msg, recipient, c[i]) end)
end

]]
	end

	if call == callLibrary[9] then
		return [[

if game.Workspace:FindFirstChild(&quot;NoLowGravity&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;NoLowGravity&quot;).Parent = nil end

while true do
	local b = Instance.new(&quot;BodyForce&quot;)
	b.Name = &quot;LowGrav&quot;
	b.force = Vector3.new(0,2500,0)
	local c = game.Players:GetChildren()
	for i = 1,#c do
		d = b:Clone()
		if c[i].Character.Torso ~= nil then
			if c[i].Character.Torso:FindFirstChild(&quot;LowGrav&quot;) == nil then
				d.Parent = c[i].Character.Torso
			end
		end
	end
	wait()
end

]]
	end

	if call == callLibrary[10] then
		return [[

if game.Workspace:FindFirstChild(&quot;LowGravity&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;LowGravity&quot;).Parent = nil end

while true do
	local c = game.Players:GetChildren()
	for i = 1,#c do
		if c[i].Character.Torso ~= nil then
			if c[i].Character.Torso:FindFirstChild(&quot;LowGrav&quot;) ~= nil then
				c[i].Character.Torso:FindFirstChild(&quot;LowGrav&quot;).Parent = nil
			end
		end
	end
	wait()
end

]]
	end

	if call == callLibrary[11] then
		return [[

if game.Workspace:FindFirstChild(&quot;RunFaster&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;RunFaster&quot;).Parent = nil end

function Leap(player)
	local torso = player.Character:FindFirstChild(&quot;Torso&quot;)
	torso.Velocity = Vector3.new(torso.Velocity.x*1.5,50,torso.Velocity.z*1.5)
	wait(0.5)
end

function Running(player)
	local torso = player.Character:FindFirstChild(&quot;Torso&quot;)
	torso.Velocity = torso.CFrame.lookVector * 96
end

function onPlayerRespawned(newPlayer)
	local hum = newPlayer.Character:FindFirstChild(&quot;Humanoid&quot;)
	hum.Running:connect(function() Running(newPlayer) end)
	hum.Jumping:connect(function() Leap(newPlayer) end)
end

function onPlayerEntered(newPlayer)
	newPlayer.Changed:connect(function (property)
		if (property == &quot;Character&quot;) then
			onPlayerRespawned(newPlayer)
		end
	end)
end

game.Players.PlayerAdded:connect(onPlayerEntered)

p = game.Players:GetChildren()
for i = 1,#p do
	p[i].Changed:connect(function (property)
		if (property == &quot;Character&quot;) then
			onPlayerRespawned(p[i])
		end
	end)
	onPlayerRespawned(p[i])
end

]]
	end

	if call == callLibrary[12] then
		return [[

if game.Workspace:FindFirstChild(&quot;RunFast&quot;) ~= nil then game.Workspace:FindFirstChild(&quot;RunFast&quot;).Parent = nil end

function Leap(player)
	local torso = player.Character:FindFirstChild(&quot;Torso&quot;)
	torso.Velocity = Vector3.new(torso.Velocity.x*1.8,75,torso.Velocity.z*1.8)
	wait(0.5)
end

function Running(player)
	local torso = player.Character:FindFirstChild(&quot;Torso&quot;)
	torso.Velocity = torso.CFrame.lookVector * 200
end

function onPlayerRespawned(newPlayer)
	local hum = newPlayer.Character:FindFirstChild(&quot;Humanoid&quot;)
	hum.Running:connect(function() Running(newPlayer) end)
	hum.Jumping:connect(function() Leap(newPlayer) end)
end

function onPlayerEntered(newPlayer)
	newPlayer.Changed:connect(function (property)
		if (property == &quot;Character&quot;) then
			onPlayerRespawned(newPlayer)
		end
	end)
end

game.Players.PlayerAdded:connect(onPlayerEntered)

p = game.Players:GetChildren()
for i = 1,#p do
	p[i].Changed:connect(function (property)
		if (property == &quot;Character&quot;) then
			onPlayerRespawned(p[i])
		end
	end)
	onPlayerRespawned(p[i])
end

]]
	end

	if call == callLibrary[13] then
		return &quot;Run Tool Extension&quot;
	end

	return false
end

function DisplayMessage(text, Wait, parent)
	local message = Instance.new(&quot;Message&quot;)
	message.Text = text
	message.Name = &quot;Message&quot;
	message.Parent = parent
	wait(Wait)
	if message ~= nil then message.Parent = nil end
end

function DisplayHint(text, Wait, parent)
	local hint = Instance.new(&quot;Hint&quot;)
	hint.Text = text
	hint.Name = &quot;Hint&quot;
	hint.Parent = parent
	wait(Wait)
	if hint ~= nil then hint.Parent = nil end
end

function acceptableName(name)
	for i = 1,#illegal do
		local s = string.gsub(illegal[i],&quot;(%s)&quot;,&quot;&quot;)
		local n = string.gsub(name,&quot;(%s)&quot;,&quot;&quot;)
		if string.match(n:lower(), s:lower()) then print(illegal[i]) return false end
	end
	return true
end

function HelpFile(Player, section)
	if section==0 then
		DisplayHint(&quot;.::General Help::.&quot;,4,Player)

		DisplayHint(&quot;\&quot;create/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Create a new script named [string].&quot;,3,Player)

		DisplayHint(&quot;\&quot;run/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Run script [string]. This works multiple times.&quot;,3,Player)

		DisplayHint(&quot;\&quot;remove/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Completely remove script [string].&quot;,3,Player)

		DisplayHint(&quot;\&quot;get/[call]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Aquire and run premade script [call]&quot;,3,Player)

		DisplayHint(&quot;\&quot;edit/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Enter edit mode with script [string].&quot;,3,Player)
		DisplayHint(&quot;For edit mode info, type \&quot;help/edit\&quot;&quot;,3,Player)

		DisplayHint(&quot;\&quot;library/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Search through the library.&quot;,3,Player)
		DisplayHint(&quot;For library info, type \&quot;help/library\&quot;&quot;,3,Player)

		DisplayHint(&quot;\&quot;checklog/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Read the chatlog.&quot;,3,Player)
		DisplayHint(&quot;For chatlog info, type \&quot;help/log\&quot;&quot;,3,Player)

		DisplayHint(&quot;NOTE:&quot;,2,Player)
		DisplayHint(&quot;It is suggested that you learn how to script before using any of these functions!&quot;,3,Player)

		DisplayHint(&quot;.::End::.&quot;,4,Player)
		return
	end

	if section==1 then
		DisplayHint(&quot;.::Edit Mode Help::.&quot;,4,Player)

		DisplayHint(&quot;The following functions are used while in edit mode.&quot;,3,Player)

		DisplayHint(&quot;\&quot;[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Insert [string] into a new line.&quot;,3,Player)

		DisplayHint(&quot;\&quot;insert/[n]/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Insert [string] into line [n].&quot;,3,Player)

		DisplayHint(&quot;\&quot;remove/[n]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Remove line [n].&quot;,3,Player)

		DisplayHint(&quot;\&quot;replace/[n]/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Replace line [n] with [string]&quot;,3,Player)

		DisplayHint(&quot;\&quot;recall/[n]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Display line [n]&quot;,3,Player)

		DisplayHint(&quot;\&quot;exit/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Exit out of edit mode.&quot;,3,Player)

		DisplayHint(&quot;.::End::.&quot;,4,Player)
		return
	end

	if section==2 then
		DisplayHint(&quot;.::Library Help::.&quot;,4,Player)

		DisplayHint(&quot;The following functions are used while in the library.&quot;,3,Player)

		DisplayHint(&quot;\&quot;script/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Enter the script section.&quot;,3,Player)

		DisplayHint(&quot;\&quot;call/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Enter the call section.&quot;,3,Player)

		DisplayHint(&quot;\&quot;exit/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Exit out of the library.&quot;,3,Player)

		DisplayHint(&quot;The following functions are used while in a section.&quot;,3,Player)

		DisplayHint(&quot;\&quot;n/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Go to next item in list.&quot;,3,Player)

		DisplayHint(&quot;\&quot;p/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Go to previous item in list.&quot;,3,Player)

		DisplayHint(&quot;\&quot;total/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Display total items in list.&quot;,3,Player)

		DisplayHint(&quot;\&quot;exit/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Exit out of section.&quot;,3,Player)

		DisplayHint(&quot;.::End::.&quot;,4,Player)
		return
	end

	if section==3 then
		DisplayHint(&quot;.::Chatlog Help::.&quot;,4,Player)

		DisplayHint(&quot;The following functions are used while reading the chatlog.&quot;,3,Player)

		DisplayHint(&quot;\&quot;n/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Go to next log.&quot;,3,Player)

		DisplayHint(&quot;\&quot;p/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Go to previous log.&quot;,3,Player)

		DisplayHint(&quot;\&quot;goto/[n]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Goto the [n]th log.&quot;,3,Player)

		DisplayHint(&quot;\&quot;exit/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Exit out of the chatlog.&quot;,3,Player)

		DisplayHint(&quot;.::End::.&quot;,4,Player)
		return
	end

	if section==4 then
		DisplayHint(&quot;.::Tool Extension Help::.&quot;,4,Player)

		DisplayHint(&quot;The tool extension helps you create a custom tool.&quot;,4,Player)
		DisplayHint(&quot;To make a custom tool, first create the script you want to use with it. (source)&quot;,4,Player)
		DisplayHint(&quot;To run the tool extension, type \&quot;get/Tool\&quot;.&quot;,4,Player)

		DisplayHint(&quot;The following functions are used while using the tool extension&quot;,3,Player)

		DisplayHint(&quot;\&quot;name/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Sets tool&apos;s name&quot;,3,Player)

		DisplayHint(&quot;\&quot;source/[string]\&quot;&quot;,2,Player)
		DisplayHint(&quot;Puts script [string] into tool&quot;,3,Player)
		DisplayHint(&quot;Only 1 script can be added per tool&quot;,3,Player)

		DisplayHint(&quot;\&quot;create/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Create your tool and exit tool extension&quot;,3,Player)

		DisplayHint(&quot;\&quot;cancel/\&quot;&quot;,2,Player)
		DisplayHint(&quot;Cancel operations&quot;,3,Player)

		DisplayHint(&quot;.::End::.&quot;,4,Player)
		return
	end
	DisplayHint(&quot;Cannot retrieve help file!&quot;,4,Player)
	return
end

function concat(string, text)
	string = string .. text .. &quot;\n&quot;
	return string
end

function onTog(check)
	local endlist = table.maxn(lines)+1
	if num.Value==endlist then
		check.Text = &quot;End of log&quot;
		return
	end
	if num.Value==0 then
		check.Text = &quot;Begining of log&quot;
		return
	end

	local Script = lines[num.Value]
	if Script~=nil then
		check.Text = Script
	end
end

function onChange()

	if scriptMode and not callMode then
		local endlist = table.maxn(library)+1
		if num.Value==endlist then
			ScName.Text = &quot;End of list&quot;
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: Type \&quot;p/\&quot; to view previous script. Type \&quot;exit/\&quot; to exit the script library&quot;
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
			return
		end
		if num.Value==0 then
			ScName.Text = &quot;Begining of list&quot;
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: Type \&quot;n/\&quot; to view next script. Type \&quot;exit/\&quot; to exit the script library&quot;
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
			return
		end

		local Script = library[num.Value]
		if Script~=nil then
			ScName.Text = &quot;Name: &quot;..Script.Name
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: [&quot;..num.Value..&quot;]; &quot;
			local tag = Script:FindFirstChild(&quot;Editing&quot;)
			if tag~=nil then ScInfo.Text = ScInfo.Text .. &quot;This script is being edited; &quot; end
			if Script.Disabled == false then ScInfo.Text = ScInfo.Text .. &quot;This script is running; &quot; end
			if string.len(Script.Name) &gt; 30 then ScInfo.Text = ScInfo.Text .. &quot;This script&apos;s name has &quot;..string.len(Script.Name)..&quot; characters; &quot; end
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
		end
	
	elseif callMode and not scriptMode then
		local endlist = table.maxn(callLibrary)+1
		if num.Value==endlist then
			ScName.Text = &quot;End of list&quot;
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: Type \&quot;p/\&quot; to view previous call. Type \&quot;exit/\&quot; to exit the call library&quot;
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
			return
		end
		if num.Value==0 then
			ScName.Text = &quot;Begining of list&quot;
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: Type \&quot;n/\&quot; to view next call. Type \&quot;exit/\&quot; to exit the call library&quot;
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
			return
		end

		local Call = callLibrary[num.Value]
		if Call~=nil then
			ScName.Text = &quot;Name: &quot;..Call
			ScInfo.Text = &quot;&quot;
			if num.Value &gt; 0 then ScInfo.Text = &quot;&lt;- &quot; end
			ScInfo.Text = ScInfo.Text .. &quot;Info: [&quot;..num.Value..&quot;]; &quot;
			local run = game.Workspace:FindFirstChild(Call)
			if run~=nil then 
				if run:FindFirstChild(&quot;GetScript&quot;)~=nil then
					ScInfo.Text = ScInfo.Text .. &quot;This call is running; &quot;
				end
			else ScInfo.Text = ScInfo.Text .. &quot;This call is not running; &quot; end
			--if string.match(retrieveSource(Call, speaker.Name), &quot;script.Parent = nil -- QuickScript&quot;) then ScInfo.Text = ScInfo.Text .. &quot;This call is a QuickScript; &quot; end
			if num.Value &lt; endlist then ScInfo.Text = ScInfo.Text .. &quot;-&gt;&quot; end
		end
	end
end

function onSearch(msg, recipient, speaker)

	if not scriptMode and not callMode then
		if msg == &quot;script/&quot; then
			num.Value = 0
			scriptMode = true
			callMode = false
			ScName.Text = &quot;.:Script Library:.&quot;
			ScInfo.Text = &quot;Info: Type \&quot;p/\&quot;/\&quot;n/\&quot; to view previous/next script. Type \&quot;exit/\&quot; to exit the script library&quot;
			return
		end

		if msg == &quot;call/&quot; then
			num.Value = 0
			callMode = true
			scriptMode = false
			ScName.Text = &quot;.:Call Library:.&quot;
			ScInfo.Text = &quot;Info: Type \&quot;p/\&quot;/\&quot;n/\&quot; to view previous/next call. Type \&quot;exit/\&quot; to exit the call library&quot;
			return
		end
	end

	if scriptMode and not callMode then
		local endlist = table.maxn(library)+1

		if msg == &quot;n/&quot; then
			if table.maxn(library) == 0 then
				ScName.Text = &quot;No scripts in library&quot;
				ScInfo.Text = &quot;Info: Type \&quot;exit/\&quot; to exit the script library&quot;
				return
			end
			if num.Value&gt;=endlist then num.Value = table.maxn(library)+1
			else num.Value = num.Value+1 end
			print(num.Value)
			return
		end

		if msg == &quot;p/&quot; then
			if table.maxn(library) == 0 then
				ScName.Text = &quot;No scripts in library&quot;
				ScInfo.Text = &quot;Info: Type \&quot;exit/\&quot; to exit the script library&quot;
				return
			end
			if num.Value&lt;=0 then num.Value = 0
			else num.Value = num.Value-1 end
			print(num.Value)
			return
		end

		if msg == &quot;total/&quot; then
			local total = table.maxn(library)
			ScName.Text = &quot;There are &quot;..total..&quot; scripts in this library&quot;
			ScInfo.Text = &quot;Info: Type \&quot;p/\&quot;/\&quot;n/\&quot; to view previous/next script. Type \&quot;exit/\&quot; to exit the script library&quot;
			return
		end

	elseif callMode and not scriptMode then
		local endlist = table.maxn(callLibrary)+1

		if msg == &quot;n/&quot; then
			if table.maxn(callLibrary) == 0 then
				ScName.Text = &quot;No calls in library&quot;
				ScInfo.Text = &quot;Info: Type \&quot;exit/\&quot; to exit the call library&quot;
				return
			end
			if num.Value&gt;=endlist then num.Value = table.maxn(callLibrary)+1
			else num.Value = num.Value+1 end
			print(num.Value)
			return
		end

		if msg == &quot;p/&quot; then
			if table.maxn(callLibrary) == 0 then
				ScName.Text = &quot;No calls in library&quot;
				ScInfo.Text = &quot;Info: Type \&quot;exit/\&quot; to exit the call library&quot;
				return
			end
			if num.Value&lt;=0 then num.Value = 0
			else num.Value = num.Value-1 end
			print(num.Value)
			return
		end

		if msg == &quot;total/&quot; then
			local total = table.maxn(callLibrary)
			ScName.Text = &quot;There are &quot;..total..&quot; calls in this library&quot;
			ScInfo.Text = &quot;Info: Type \&quot;p/\&quot;/\&quot;n/\&quot; to view previous/next call. Type \&quot;exit/\&quot; to exit the call library&quot;
			return
		end
	end

	if msg == &quot;exit/&quot; then
		if (scriptMode and not callMode) or (callMode and not scriptMode) then
			scriptMode = false
			callMode = false
			ScName.Text = &quot;.::Library::.&quot;
			ScInfo.Text = &quot;Info: Type \&quot;script/\&quot;/\&quot;call/\&quot; to enter script/call library. Type \&quot;exit/\&quot; to exit the library&quot;
			return
		elseif not callMode and not scriptMode then
			search:disconnect()
			change:disconnect()
			num.Parent = nil
			library = { }
			ScName.Parent = nil
			ScInfo.Parent = nil
			e = true
			DisplayMessage(&quot;Done&quot;,1,speaker)
			return
		end
	end
end


function onView(msg, recipient, speaker, Script, check)
	lines = { }
	local source = Script.Source
	source:gsub(&quot;([^&quot;..string.char(10)..&quot;]*)&quot;..string.char(10), function(c) table.insert(lines, c) end)

	if msg == &quot;exit/&quot; then
		view:disconnect()
		check.Parent = nil
		num.Parent = nil
		e = true
		DisplayMessage(&quot;Stopped reviewing log &quot;,1,speaker)
		return

	elseif string.sub(msg, 1,5) == &quot;goto/&quot; then
		if msg == &quot;goto/&quot; then DisplayMessage(&quot;Please specify a line&quot;,2,speaker) return end
		local i = tonumber(string.sub(msg,6))
		if i &lt; 1 or i &gt; table.maxn(lines) then DisplayMessage(&quot;Line &quot;..i..&quot; doesn&apos;t exist&quot;,2,speaker) return end
		num.Value = i
--		check.Text = lines[i]
		DisplayMessage(&quot;Line: &quot;..i,1,speaker)
		return

	elseif msg == &quot;n/&quot; then
		local endlist = table.maxn(lines)+1
		if table.maxn(lines) == 0 then
			check.Text = &quot;Log is unavailable&quot;
			return
		end
		if num.Value&gt;=endlist then num.Value = table.maxn(lines)+1
		else num.Value = num.Value+1 end
		print(num.Value)
		return

	elseif msg == &quot;p/&quot; then
		if table.maxn(library) == 0 then
			check.Text = &quot;Log is unavailable&quot;
			return
		end
		if num.Value&lt;=0 then num.Value = 0
		else num.Value = num.Value-1 end
		print(num.Value)
		return

	elseif msg == &quot;total/&quot; then
		local total = table.maxn(lines)
		check.Text = &quot;There are &quot;..total..&quot; chats logged.&quot;
		return
	end
end



function q(value1, value2)
	if value1 == 1 then return value2-1 else return value2-2 end
end

function q2(value1, value2)
	if value1 == 1 then return value2+2 else return value2+1 end
end

function onAdd(msg, recipient, speaker, Script, check, tag)

	if Script.Parent ~= game.Workspace then DisplayMessage(&quot;An error occured!&quot;,3,speaker) msg = &quot;exit/&quot; end

	if msg == &quot;exit/&quot; then
		add:disconnect()
		check.Parent = nil
		tag.Parent = nil
		e = true
		DisplayMessage(&quot;Stopped editing &quot;..Script.Name,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return

	elseif string.sub(msg, 1,7) == &quot;remove/&quot; then
		lines = { }
		local source = Script.Source
		source:gsub(&quot;([^&quot;..string.char(10)..&quot;]*)&quot;..string.char(10), function(c) table.insert(lines, c) end)
		if msg == &quot;remove/&quot; then DisplayMessage(&quot;Please specify a line&quot;,2,speaker) return end
		local i = tonumber(string.sub(msg,8))
		if i &lt; 1 or i &gt; table.maxn(lines) then DisplayMessage(&quot;Line &quot;..i..&quot; doesn&apos;t exist&quot;,2,speaker) return end
		local source=Script.Source
		local nBegin, nEnd = string.find(source, lines[i], 0, true)
		if nBegin == 1 and nEnd == 0 then DisplayMessage(&quot;An error occured!&quot;,2,speaker) return end
		local beforeString = string.sub(source, 1, q(i, nBegin))
		local afterString = string.sub(source, q2(i, nEnd))
		local finalString = beforeString..afterString
		Script.Source = finalString

		DisplayMessage(&quot;Removed line &quot;..i..&quot; from &quot;..Script.Name,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return

	elseif string.sub(msg, 1,7) == &quot;recall/&quot; then
		lines = { }
		local source = Script.Source
		source:gsub(&quot;([^&quot;..string.char(10)..&quot;]*)&quot;..string.char(10), function(c) table.insert(lines, c) end)
		if msg == &quot;recall/&quot; then DisplayMessage(&quot;Please specify a line&quot;,2,speaker) return end
		local i = tonumber(string.sub(msg,8))
		if i &lt; 1 or i &gt; table.maxn(lines) then DisplayMessage(&quot;Line &quot;..i..&quot; doesn&apos;t exist&quot;,2,speaker) return end
		check.Text = &quot;Line &quot;..i..&quot;:  &quot;..lines[i]
		DisplayMessage(&quot;Recalled line &quot;..i,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return

	elseif string.sub(msg, 1,7) == &quot;insert/&quot; then
		lines = { }
		local source = Script.Source
		source:gsub(&quot;([^&quot;..string.char(10)..&quot;]*)&quot;..string.char(10), function(c) table.insert(lines, c) end)

		sep = { }
		msg:gsub(&quot;/&quot;..&quot;([^&quot;..&quot;/&quot;..&quot;]*)&quot;, function(c) table.insert(sep, c) end,2)
		if msg == &quot;insert/&quot; then DisplayMessage(&quot;Please specify a line&quot;,2,speaker) return end
		if msg == &quot;insert/&quot;..sep[1] then DisplayMessage(&quot;Please specify a string&quot;,2,speaker) return end
		if msg == &quot;insert/&quot;..sep[1]..&quot;/&quot; then DisplayMessage(&quot;Please specify a string&quot;,2,speaker) return end
		local nBegin, nEnd = string.find(msg, sep[2], 0, true)
		local line = tonumber(sep[1])
		local text = string.sub(msg, nBegin)
		if line &lt; 1 or line &gt; table.maxn(lines) then DisplayMessage(&quot;Line &quot;..line..&quot; doesn&apos;t exist&quot;,2,speaker) return end
		local source=Script.Source
		local nBegin, nEnd = string.find(source, lines[line], 0, true)
		if nBegin == 1 and nEnd == 0 then DisplayMessage(&quot;An error occured!&quot;,2,speaker) return end
		local beforeString = string.sub(source, 1, nBegin-1)
		local afterString = string.sub(source, nBegin)
		local finalString = beforeString..text..&quot;\n&quot;..afterString
		Script.Source = finalString

		DisplayMessage(&quot;Inserted into line &quot;..line,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return

	elseif string.sub(msg, 1,8) == &quot;replace/&quot; then
		lines = { }
		local source = Script.Source
		source:gsub(&quot;([^&quot;..string.char(10)..&quot;]*)&quot;..string.char(10), function(c) table.insert(lines, c) end)

		sep = { }
		msg:gsub(&quot;/&quot;..&quot;([^&quot;..&quot;/&quot;..&quot;]*)&quot;, function(c) table.insert(sep, c) end,2)
		if msg == &quot;replace/&quot; then DisplayMessage(&quot;Please specify a line&quot;,2,speaker) return end
		if msg == &quot;replace/&quot;..sep[1] then DisplayMessage(&quot;Please specify a string&quot;,2,speaker) return end
		if msg == &quot;replace/&quot;..sep[1]..&quot;/&quot; then DisplayMessage(&quot;Please specify a string&quot;,2,speaker) return end
		local nBegin, nEnd = string.find(msg, sep[2], 0, true)
		local line = tonumber(sep[1])
		local text = string.sub(msg, nBegin)
		if line &lt; 1 or line &gt; table.maxn(lines) then DisplayMessage(&quot;Line &quot;..line..&quot; doesn&apos;t exist&quot;,2,speaker) return end
		local source=Script.Source
		local nBegin, nEnd = string.find(source, lines[line], 0, true)
		if nBegin == 1 and nEnd == 0 then DisplayMessage(&quot;An error occured!&quot;,2,speaker) return end
		local beforeString = string.sub(source, 1, nBegin-1)
		local afterString = string.sub(source, nEnd+1)
		local replaceString = string.sub(source, nBegin, nEnd)
		local finalString = beforeString..text..afterString
		Script.Source = finalString

		DisplayMessage(&quot;Replaced line &quot;..line,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return

	else
		local string = Script.Source
		Script.Source = concat(string, msg)
		DisplayMessage(&quot;Added to &quot;..Script.Name,1,speaker)
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		return
	end
end

function ToolExtension(msg,recipient,speaker,check,hopper)
	local source = string.lower(speaker.Name)
	local norm = msg
	local msg = string.lower(msg)

	if string.sub(msg, 1,7) == &quot;source/&quot; then
		if msg == &quot;source/&quot; then check.Text = &quot;Specify a source&quot; return end
		local Script = game.Workspace:FindFirstChild(string.sub(norm,8))
		if Script ~= nil then
			if not acceptableName(Script.Name) then check.Text = &quot;Invalid source&quot; return end
			local pro = Script:FindFirstChild(&quot;Protected&quot;)
			if pro~=nil then check.Text = &quot;Invalid source&quot; return end
			local get = Script:FindFirstChild(&quot;GetScript&quot;)
			if get~=nil then check.Text = &quot;Could not use source&quot; return end
			local tag = Script:FindFirstChild(&quot;Editing&quot;)
			if tag~=nil then check.Text = &quot;Could not use source&quot; return end
			local c = hopper:GetChildren()
			local n = #c
			if n ~= 0 then
				for i = 1, n do
					c[i]:Remove()
				end
			end
			local s = Script:Clone()
			s.Disabled = false
			if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
				Script.Expire.Value = 0
				s.Expire:Remove()
				s.Expirer:Remove()
			end
			s.Parent = hopper
			if n == 0 then check.Text = &quot;Added source&quot; end
			if n &gt; 0 then check.Text = &quot;Replaced source&quot; end
		else
			check.Text = &quot;Could not find source&quot;
		end
	end
	if string.sub(msg,1,5) == &quot;name/&quot; then
		if msg == &quot;name/&quot; then check.Text = &quot;Specify a name&quot; return end
		hopper.Name = string.sub(norm,6)
		check.Text = &quot;Changed name&quot;
	end
	if msg == &quot;create/&quot; then
		if hopper ~= nil then
			if speaker:FindFirstChild(&quot;Backpack&quot;) ~= nil then
				hopper.Parent = speaker.Backpack
				check.Text = &quot;Created tool&quot;
				wait(3)
				check.Text = &quot;Closing Tool Extension...&quot;
				wait(3)
				check:Remove()
				if tool ~= nil then
					tool:disconnect()
				end
				e = true
				return
			else
				DisplayMessage(&quot;ERROR: localplayer: Cannot find parent&quot;,3,speaker)
				return
			end
		end
	end
	if msg == &quot;cancel/&quot; then
		if hopper ~= nil then
			hopper:Remove()
		end
		check.Text = &quot;Closing Tool Extension...&quot;
		wait(3)
		check:Remove()
		if tool ~= nil then
			tool:disconnect()
		end
		e = true
		return
	end
end

function onChatted(msg, recipient, speaker)
	if not e then return end

	local source = string.lower(speaker.Name)
	local norm = msg
	local msg = string.lower(msg)

	if string.sub(msg, 1, 5) == &quot;help/&quot; then
		if string.sub(msg, 6) == &quot;edit&quot; then HelpFile(speaker, 1) return end
		if string.sub(msg, 6) == &quot;library&quot; then HelpFile(speaker, 2) return end
		--if string.sub(msg, 6) == &quot;log&quot; then HelpFile(speaker, 3) return end
		if string.sub(msg, 6) == &quot;tool&quot; then HelpFile(speaker, 4) return end
		HelpFile(speaker, 0)
		return
	end

--[[	if string.sub(msg,1,14) == &quot;scriptbuilder/&quot; then
		game.Workspace.dhtml:Clone().Parent = speaker.Character
	end]]

--[[	if string.sub(msg,1,14) == &quot;updates/&quot; then
		game.Workspace[&quot;Updates&quot;]:Clone().Parent = speaker.Character
	end]]

	if string.sub(msg, 1, 4) == &quot;get/&quot; then
		local source = retrieveSource(string.sub(norm, 5),speaker)
		if not source then
			DisplayMessage(&quot;SB.get.&quot;..string.sub(norm, 5)..&quot; doesn&apos;t exist.&quot;,3,speaker)
			return
		elseif source == &quot;Run Tool Extension&quot; then
			e = false
			local check = Instance.new(&quot;Hint&quot;)
			check.Text = &quot;Running Tool Extension&quot;
			check.Parent = speaker
			local hopper = Instance.new(&quot;HopperBin&quot;)
			tool = speaker.Chatted:connect(function(msg, recipient) ToolExtension(msg, recipient, speaker,check,hopper) end)
			DisplayMessage(&quot;Aquired Tool Extension&quot;,1,speaker)
			return
		end

		local Script = game.Workspace:FindFirstChild(string.sub(norm, 5))
		if Script ~= nil then Script.Parent = nil end
		local Script = Instance.new(&quot;Script&quot;)
		Script.Name = string.sub(norm, 5)
		Script.Disabled = true
		local tag = Instance.new(&quot;IntValue&quot;)
		tag.Name = &quot;GetScript&quot;
		tag.Parent = Script
		Script.Source = source
		Script.Parent = game.Workspace

		local Copy = Script:Clone()
		Copy.Disabled = false
		Script.Parent = nil
		Copy.Parent = game.Workspace
		return
		DisplayMessage(&quot;Aquired &quot;..Copy.Name,1,speaker)
	end

	if string.sub(msg, 1, 7) == &quot;create/&quot; then
		local Script = game.Workspace:FindFirstChild(string.sub(norm, 8))
		if Script ~= nil then DisplayMessage(Script.Name..&quot; already exists.&quot;,3,speaker) return end
		local Script = Instance.new(&quot;Script&quot;)
		Script.Name = string.sub(norm, 8)
		if not acceptableName(Script.Name) then DisplayMessage(&quot;ERROR: property: script.Name is invalid&quot;,3,speaker) return end
		Script.Source = &quot;&quot;
		Script.Disabled = true
		local tag = Instance.new(&quot;ObjectValue&quot;)
		tag.Name = &quot;Creator&quot;
		tag.Value = speaker
		tag.Parent = Script
		local ex = Instance.new(&quot;IntValue&quot;)
		ex.Name = &quot;Expire&quot;
		ex.Parent = Script
		local expire = Instance.new(&quot;Script&quot;)
		expire.Name = &quot;Expirer&quot;
		expire.Source = [[
local expire = script.Parent.Expire
while true do
	wait(1)
	expire.Value = expire.Value + 1
	if expire.Value &gt; 600 then
		script.Parent:Remove()
	end
end
]]
		expire.Parent = Script
		Script.Parent = game.Workspace
		DisplayMessage(&quot;Created &quot;..string.sub(norm, 8),1,speaker)
		return
	end

	if string.sub(msg, 1, 5) == &quot;edit/&quot; then
		local Script = game.Workspace:FindFirstChild(string.sub(norm, 6))
		if Script==nil then DisplayMessage(string.sub(norm, 6)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		if Script.className~=&quot;Script&quot; then DisplayMessage(string.sub(norm, 8)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		local pro = Script:FindFirstChild(&quot;Protected&quot;)
		if pro~=nil then DisplayMessage(string.sub(norm, 6)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		local get = Script:FindFirstChild(&quot;GetScript&quot;)
		if get~=nil then DisplayMessage(Script.Name..&quot; cannot be edited.&quot;,3,speaker) return end
		local tag = Script:FindFirstChild(&quot;Editing&quot;)
		if tag~=nil then DisplayMessage(Script.Name..&quot; is already being edited.&quot;,3,speaker) return end
		local tag = Instance.new(&quot;StringValue&quot;)
		local save = Instance.new(&quot;Script&quot;)
		save.Source = [[
while true do
	if game.Players:FindFirstChild(script.Parent.Value) == nil then
		script.Parent.Parent = nil
	end
	wait()
end
		]]
		tag.Name = &quot;Editing&quot;
		tag.Value = speaker.Name
		save.Parent = tag
		tag.Parent = Script
		local check = Instance.new(&quot;Hint&quot;)
		check.Text = &quot;Editing &quot;..Script.Name..&quot;. All text will be added as a new line. \&quot;exit/\&quot; stops editing. &quot;
		check.Parent = speaker
		e = false
		add = speaker.Chatted:connect(function(msg, recipient) onAdd(msg, recipient, speaker, Script, check, tag) end)
		DisplayMessage(&quot;Editing &quot;..Script.Name,1,speaker)
		return
	end

	if string.sub(msg, 1, 4) == &quot;run/&quot; then
		local Script = game.Workspace:FindFirstChild(string.sub(norm, 5))
		if Script==nil then DisplayMessage(string.sub(norm, 5)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		if Script.className~=&quot;Script&quot; then DisplayMessage(string.sub(norm, 8)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		if Script:FindFirstChild(&quot;Expire&quot;) ~= nil then
			Script.Expire.Value = 0
		end
		local pro = Script:FindFirstChild(&quot;Protected&quot;)
		if pro~=nil then DisplayMessage(string.sub(norm, 5)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		local get = Script:FindFirstChild(&quot;GetScript&quot;)
		if get~=nil then DisplayMessage(&quot;Cannot run. Use \&quot;get/\&quot; instead.&quot;,3,speaker) return end
		local tag = Script:FindFirstChild(&quot;Editing&quot;)
		if tag~=nil then DisplayMessage(Script.Name..&quot; is being edited.&quot;,3,speaker) return end
		local Copy = Script:Clone()
		Copy.Disabled = false
		Script.Parent = nil
		Copy.Parent = game.Workspace
		DisplayMessage(&quot;Executed &quot;..Copy.Name,1,speaker)
		return
	end

	if string.sub(msg, 1, 7) == &quot;remove/&quot; then
		local Script = game.Workspace:FindFirstChild(string.sub(norm, 8))
		if Script==nil then DisplayMessage(string.sub(norm, 8)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		local pro = Script:FindFirstChild(&quot;Protected&quot;)
		if pro~=nil then DisplayMessage(string.sub(norm, 8)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		if Script.className~=&quot;Script&quot; then DisplayMessage(string.sub(norm, 8)..&quot; doesn&apos;t exist.&quot;,3,speaker) return end
		local tag = Script:FindFirstChild(&quot;Editing&quot;)
		if tag~=nil then DisplayMessage(Script.Name..&quot; is being edited.&quot;,3,speaker) return end
		Script.Parent = nil
		DisplayMessage(&quot;Removed &quot;..string.sub(norm, 8),1,speaker)
		return
	end


	if string.sub(msg, 1, 8) == &quot;library/&quot; then
		e = false
		callMode = false
		scriptMode = false
		library = { }
		c = game.Workspace:GetChildren()
		for i = 1,#c do
			if c[i].className == &quot;Script&quot; then
				if c[i]:FindFirstChild(&quot;Protected&quot;) == nil then
					table.insert(library, c[i])
				end
			end
		end
		print(table.maxn(library))
		ScName = Instance.new(&quot;Message&quot;)
		ScInfo = Instance.new(&quot;Hint&quot;)
		ScName.Text = &quot;.::Library::.&quot;
		ScInfo.Text = &quot;Info: Type \&quot;script/\&quot;/\&quot;call/\&quot; to enter script/call library. Type \&quot;exit/\&quot; to exit the library&quot;
		ScName.Parent = speaker
		ScInfo.Parent = speaker

		num = Instance.new(&quot;IntValue&quot;)
		num.Parent = script
		change = num.Changed:connect(onChange)
		search = speaker.Chatted:connect(function(msg, recipient) onSearch(msg, recipient, speaker) end)
	end

	--[[if string.sub(msg, 1, 9) == &quot;checklog/&quot; then
		local Script = game.Workspace:FindFirstChild(&quot;ChatLogger&quot;)
		if Script==nil then DisplayMessage(&quot;ChatLogger doesn&apos;t exist!&quot;,3,speaker) return end
		if Script.className~=&quot;Script&quot; then DisplayMessage(&quot;An error occured!&quot;,3,speaker) return end
		local check = Instance.new(&quot;Hint&quot;)
		check.Text = &quot;Reviewing server&apos;s chat log. \&quot;exit/\&quot; will stop reviewing. &quot;
		check.Parent = speaker
		e = false
		num = Instance.new(&quot;IntValue&quot;)
		num.Parent = Script
		tog = num.Changed:connect(function() onTog(check) end)
		view = speaker.Chatted:connect(function(msg, recipient) onView(msg, recipient, speaker, Script:FindFirstChild(&quot;Log&quot;), check) end)
		DisplayMessage(&quot;Reviewing Log&quot;,1,speaker)
		return
	end]]
end

local newPlayer = script:FindFirstChild(&quot;Speaker&quot;).Value

function onPlayerExit(player)
	if player == newPlayer then script.Parent = nil end
	wait()
end

newPlayer.Chatted:connect(function(msg, recipient) onChatted(msg, recipient, newPlayer) end)

game.Players.ChildRemoved:connect(onPlayerExit)

]==]

function onPlayerEntered(newPlayer)
	local Scripter = Instance.new(&quot;Script&quot;)
	local value = Instance.new(&quot;ObjectValue&quot;)
	local protect = script:FindFirstChild(&quot;Protected&quot;):Clone()

	Scripter.Name = &quot;Script Builder&quot;
	value.Name = &quot;Speaker&quot;
	value.Value = newPlayer
	value.Parent = Scripter
	protect.Parent = Scripter
	Scripter.Source = source
	Scripter.Parent = game.Workspace
	print(&quot;Entered&quot;)
end

game.Players.ChildAdded:connect(onPlayerEntered)
</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX6">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Updates</string>
				<string name="Source">local w = game:service(&quot;HtmlService&quot;):NewWindow(470,395)

function getPlayer(humanoid) 
	local players = game.Players:children() 
		for i = 1, #players do 
			if players[i].Character.Humanoid == humanoid then return players[i] end 
		end 
	return nil 
end 

w.DocumentComplete:connect(function ()
	w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Updates&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;0&quot; height=&quot;0&quot; border=&quot;0&quot; bordercolor=&quot;blue&quot;&gt;
						Enabled advanced security &lt;br&gt;
						Updated advanced security &lt;br&gt;
						Added infinite loop debugger &lt;br&gt;
						&quot;:clone()&quot; added as illegal text &lt;br&gt;
						Added Trigger&#153; Source Security &lt;br&gt;
						&quot;:clone()&quot; removed from illegal text &lt;br&gt;
						Updated Trigger&#153;&lt;br&gt;
						Disabled &quot;updates/&quot;
						Added Tool extension &lt;br&gt;
						Disabled &quot;checklog/&quot; &lt;br&gt;
					&lt;/font&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;br&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
	]==])

	w:Show()
end)

w:Navigate()
</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">External Source</string>
				<string name="Source">URL = &quot;http://wiki.roblox.com/index.php?title=User:Anaminus/SBExternalSource&amp;printable=yes&quot;
startcode = &quot;424547494E534352495054&quot;
endcode = &quot;454E44534352495054&quot;

e = true
Script = nil

function BreakDown(msg)
	local sep = &quot;&quot;
	msg:gsub(startcode..&quot;(.-)&quot;..endcode, function(c) sep = c end,1)
	return sep
end

function setSource(s)
	source = game:HttpGet(URL,true)
	local temp = BreakDown(source)
	if temp ~= nil then 
		temp = temp:gsub(&quot;&amp;quot;&quot;,&quot;\&quot;&quot;) -- Fix any &quot;changes&quot; made in the script.
		s.Source = temp
	else 
		error(&quot;Source is nil&quot;,0) 
	end
end

function onChange(s)

	Script = nil
	Script = s:Clone()
	s.Parent = nil
	setSource(Script)
	Script.Parent = game.Workspace
end

Script = Instance.new(&quot;Script&quot;)
local protect = Instance.new(&quot;IntValue&quot;)
protect.Name = &quot;Protected&quot;
protect.Parent = Script
Script.Name = &quot;External Source&quot;
setSource(Script)
Script.Parent = game.Workspace
while e do
	local old = BreakDown(game:HttpGet(URL,true))
	wait(30)
	local new = BreakDown(game:HttpGet(URL,true))
	if old ~= new then
		onChange(Script)
	end
	wait(30)
end
</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX9">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX10">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CleanUpSnaps</string>
				<string name="Source">function cleanUpSnaps(object)
	local check,c = {&quot;Part&quot;,&quot;SpawnLocation&quot;,&quot;FlagStand&quot;,&quot;Seat&quot;},object:GetChildren()
	local function runCheck(class)
		for i = 1, #check do
			if check[i]:lower() == class:lower() then return true end
		end
		return false
	end
	for i = 1, #c do
		if runCheck(c[i].className) then
			if c[i].Anchored == true then
				c[i]:BreakJoints()
			end
		else
			cleanUpSnaps(c[i])
		end
	end
end

print(&quot;CleanUpSnaps Loaded&quot;)

while true do
	cleanUpSnaps(game.Workspace)
	wait(5)
end
</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX11">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX12">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Trigger&#153; Source Security</string>
				<string name="Source">-- Anaminus
-- Trigger&#153; Source Security

illegal = {&quot;Script Builder&quot;,&quot;Enable SB&quot;,&quot;External Source&quot;,&quot;Chat Log&quot;,&quot;CleanUpSnaps&quot;,&quot;Updates&quot;,&quot;Trigger&quot;,&quot;SaveScript&quot;,&quot;Protected&quot;,&quot;NetworkService&quot;,&quot;NetworkServer&quot;,&quot;MaxPlayers&quot;,&quot;Source&quot;,&quot;CharacterAppearance&quot;}

exceptions = {&quot;Script Context&quot;,&quot;Stats&quot;,&quot;Run Service&quot;,&quot;GuiRoot&quot;,&quot;RelativePanel&quot;,&quot;JointsService&quot;,&quot;Selection&quot;,&quot;Instance&quot;,&quot;FilteredSelection&quot;}

function acceptableDecents(str)
	for n = 1,#exceptions do
		if str:lower() == exceptions[n]:lower() then return false end
	end
	return true
end

function createDecents(object,parent)
	local g = object:GetChildren()
	for i = 1, #g do
		if acceptableDecents(g[i].Name) then
			local c = Instance.new(&quot;ObjectValue&quot;)
			c.Name = g[i].Name
			c.Parent = parent
			createDecents(g[i],c)
		end
	end
end

function checkForDamage(Script)
	local s = Instance.new(&quot;Script&quot;)
	local g = game:GetChildren()
	createDecents(game,s)

	local source1 = [[
game = script
workspace = game.Workspace

]]
	local source2 = [[

game.Disabled = true
]]
	local source,multiplier = Script.Source:gsub(&quot;wait%((.-)%)&quot;,&quot;wait()&quot;)
	s.Source = source1..source..source2
	s.Source = debugInfLoop(s.Source)
	local tag = Instance.new(&quot;CFrameValue&quot;)
	tag.Name = &quot;False Script&quot;
	tag.Parent = s
	s.Parent = game.Workspace

	-- Check for damage

	wait(0.05*multiplier)
	if s.Parent == nil then print(&quot;Located threat1&quot;) return false end
	if s:FindFirstChild(&quot;Workspace&quot;) == nil
	or s:FindFirstChild(&quot;Players&quot;) == nil
	or s:FindFirstChild(&quot;Lighting&quot;) == nil
	or s:FindFirstChild(&quot;StarterPack&quot;) == nil
	or s:FindFirstChild(&quot;NetworkServer&quot;) == nil
	or s:FindFirstChild(&quot;Soundscape&quot;) == nil
		then 
		print(&quot;Located threat2&quot;)
		s.Parent = nil return false
	end
	local p = game.Players:GetChildren()
	for i = 1, #p do
		if s.Players:FindFirstChild(p[i].Name) == nil then
			print(&quot;Located threat3&quot;)
			s.Parent = nil return false
		end
	end

	s.Parent = nil
	return true
end

function acceptableSource(str)
	for i = 1,#illegal do
		local s = string.gsub(illegal[i],&quot;(%s)&quot;,&quot;&quot;)
		local n = string.gsub(str,&quot;(%s)&quot;,&quot;&quot;)
		if string.match(n:lower(), s:lower()) then return false end
	end
	return true
end

function acceptableName(name)
	for i = 1,#illegal do
		local s = string.gsub(illegal[i],&quot;(%s)&quot;,&quot;&quot;)
		local n = string.gsub(name,&quot;(%s)&quot;,&quot;&quot;)
		if string.match(n:lower(), s:lower()) then print(illegal[i]) return false end
	end
	return true
end

function isSafe(Script)

	-- Basic Security --
	local source = Script.Source
	local new = string.gsub(source,&quot;(%s)&quot;,&quot;&quot;)

	if not acceptableSource(source) then return false end
	--[[if string.match(new:lower(), &quot;bb9518e7b4eb7211c969ad1c62c7bcda&quot;)
	or string.match(new:lower(), &quot;34ae6867183859adff63d67e2bd36665&quot;)
	or string.match(new:lower(), &quot;3958d55616025a333b61ba0908a2df92&quot;)

		then return false
	end]]

	-- Advanced Security --
	if not checkForDamage(Script) then

		return false
	end

	return true
end

function debugInfLoop(String)
	return String:gsub(&quot;while(.*)do&quot;,function(s) return &quot;while&quot;..s..&quot;do&quot;..&quot;\nwait()\n&quot; end)
end

function notify(player)
	if player == nil then return end
	local h = Instance.new(&quot;Hint&quot;)
	h.Text = &quot;Trigger has detected illegal text in your script.&quot;
	h.Parent = player
	wait(3)
	h.Text = &quot;Your script was automatically removed.&quot;
	wait(3)
	h.Parent = nil
end

function onAdd(object)
	if object.className == &quot;Script&quot; then
		if acceptableName(object.Name) == true then
			if object:FindFirstChild(&quot;False Script&quot;) == nil then
				object.Disabled = true
				if not isSafe(object) then
					local creator = object:FindFirstChild(&quot;Creator&quot;)
					if creator ~= nil then
						if creator.className == &quot;ObjectValue&quot; then
							notify(creator.Value)
						end
					end
					object.Parent = nil
					return
				end
				object.Source = debugInfLoop(object.Source)
				object.Disabled = false
				local o = object:Clone()
				object.Parent = nil
				local tag = Instance.new(&quot;CFrameValue&quot;)
				tag.Name = &quot;False Script&quot;
				tag.Parent = o
				o.Parent = game.Workspace
			else
				object:FindFirstChild(&quot;False Script&quot;).Parent = nil
			end
		end
	end
end

game.Workspace.ChildAdded:connect(onAdd)

SB = game.Workspace[&quot;Enable SB&quot;]
SSS = game.Workspace[&quot;SaveScript&quot;]
B = game.Workspace[&quot;50617274&quot;]

game.Workspace.ChildRemoved:connect(function(instance)
	wait()
	if instance == SB then
		SB.Parent = game.Workspace
	elseif instance == SSS then
		SSS.Parent = game.Workspace
	elseif instance == B then
		B.Parent = game.Workspace
		game.Workspace.PrimaryPart = B
	end
end)
</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX13">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX14">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GarbageCollector</string>
				<string name="Source">collectgarbage(&quot;collect&quot;)
</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX15">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SaveScript</string>
				<string name="Source">trigger = game.Workspace[&quot;Trigger&#153; Source Security&quot;]

game.Workspace.ChildRemoved:connect(function(instance)
	wait()
	if instance == trigger then
		trigger.Parent = game.Workspace
	end
end)</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="IntValue" referent="RBX16">
				<Properties>
					<string name="Name">Protected</string>
					<int name="Value">0</int>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="RunService" referent="RBX17">
		<Properties>
			<string name="Name">Run Service</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<External>RBX18</External>
	<External>RBX19</External>
	<Item class="Players" referent="RBX20">
		<Properties>
			<int name="MaxPlayers">12</int>
			<string name="Name">Players</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="StarterPack" referent="RBX21">
		<Properties>
			<string name="Name">StarterPack</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX22">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
			<bool name="archivable">true</bool>
		</Properties>
		<External>RBX23</External>
		<External>RBX24</External>
		<External>RBX25</External>
		<External>RBX26</External>
		<External>RBX27</External>
		<External>RBX28</External>
		<External>RBX29</External>
		<External>RBX30</External>
		<External>RBX31</External>
		<External>RBX32</External>
		<External>RBX33</External>
		<External>RBX34</External>
		<External>RBX35</External>
		<External>RBX36</External>
	</Item>
	<Item class="ContentProvider" referent="RBX37">
		<Properties>
			<string name="Name">Instance</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX38">
		<Properties>
			<string name="Name">Selection</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="ControllerService" referent="RBX39">
		<Properties>
			<string name="Name">Instance</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX40">
		<Properties>
			<Color3 name="BottomAmbientV9">4286250872</Color3>
			<Color3 name="ClearColor">4278190080</Color3>
			<float name="GeographicLatitude">41.7332993</float>
			<string name="Name">Lighting</string>
			<Color3 name="ShadowColor">4289835441</Color3>
			<Color3 name="SpotLightV9">4294967295</Color3>
			<string name="TimeOfDay">14:00:00</string>
			<Color3 name="TopAmbientV9">4294967295</Color3>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="LocalScript" referent="RBX41">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Tip</string>
				<string name="Source">local w = game:service(&quot;HtmlService&quot;):NewWindow(800,300)

function getPlayer(humanoid) 
	local players = game.Players:children() 
		for i = 1, #players do 
			if players[i].Character.Humanoid == humanoid then return players[i] end 
		end 
	return nil 
end 

w:SetCallback(function(a) 
	print(a)
	w:Unbind()
	w:Bind(script.Value,&quot;Value&quot;,&quot;input&quot;)
	w:Bind(script.Value,&quot;Value&quot;,&quot;output&quot;)
end)

w.DocumentComplete:connect(function ()
	w:SetBody([==[

&lt;html&gt;
&lt;body&gt;

Input: &lt;input id=&quot;input&quot; type=&quot;text&quot;&gt;&lt;br /&gt;

Output: &lt;input id=&quot;output&quot; type=&quot;text&quot; value=&quot;Blah&quot; onchange=&quot;window.external.Call(&apos;change&apos;)&quot; readonly&gt;&lt;br /&gt;

&lt;/body&gt;
&lt;/html&gt;

	]==])

	w:Show()
	w:Bind(script.Value,&quot;Value&quot;,&quot;input&quot;)
	w:Bind(script.Value,&quot;Value&quot;,&quot;output&quot;)
	w:Bind(game.Workspace.Script,&quot;Source&quot;,&quot;output&quot;)
end)

w:Navigate()
</string>
				<bool name="archivable">true</bool>
			</Properties>
			<Item class="StringValue" referent="RBX42">
				<Properties>
					<string name="Name">Value</string>
					<string name="Value"></string>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX43">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">HelpFile</string>
				<string name="Source">local w = game:service(&quot;HtmlService&quot;):NewWindow(470,530)

function getPlayer(humanoid) 
	local players = game.Players:children() 
		for i = 1, #players do 
			if players[i].Character.Humanoid == humanoid then return players[i] end 
		end 
	return nil 
end 

w:SetCallback(function(a) 
	print(a)

	if a == &quot;global&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Message&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;create/&lt;i&gt;string&lt;/i&gt;&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Creates a new script named &lt;i&gt;string&lt;/i&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;edit/&lt;i&gt;string&lt;/i&gt;&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Opens Edit Mode with script &lt;i&gt;string&lt;/i&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;run/&lt;i&gt;string&lt;/i&gt;&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Runs script &lt;i&gt;string&lt;/i&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;remove/&lt;i&gt;string&lt;/i&gt;&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Removes script &lt;i&gt;string&lt;/i&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;library/&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Opens the library.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;get/&lt;i&gt;call&lt;/i&gt;&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Creates and runs a premade script named &lt;i&gt;call&lt;/i&gt;.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;help&quot; then
		w:SetBody([==[

&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Help&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;help/&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Opens the Help window.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; width=&quot;20&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;vec&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Vector3&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;vec/player/Vector3&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Moves Player&apos;s character to Vector3.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; width=&quot;20&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;admin&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Administration&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;admin/Player[/...]&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Adds Player to the permission list.&lt;br&gt;
							Extra arguments can be used for extra players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;unadmin/Player[/...]&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Removes Player from the permission list.&lt;br&gt;
							Extra arguments can be used for extra players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;ban&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Ban&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;ban/Player[/...]&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Bans Player from the server.&lt;br&gt;
							Extra arguments can be used for extra players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; width=&quot;20&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;boot&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Boot&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;boot/Player[/...]&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Removes Player from the server (player can come back).&lt;br&gt;
							Extra arguments can be used for extra players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; width=&quot;20&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;kill&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Kill&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;kill/(1: all)(2: Player[/...])&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function(1):&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Kills all non-admin players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function(2):&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Kills Player.&lt;br&gt;
							Extra arguments can be used for extra players.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; width=&quot;20&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;msg&quot; then
		w:SetBody([==[
&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
	&lt;tr&gt;
		&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
			&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
				&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Chat: Message&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;m/Message[/Wait]&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Displays Message to all players.&lt;br&gt;
							An extra argument sets the duration of Message&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;h/Message&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Displays Message to all players in a hint&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;rh/&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Removes a hint if displayed&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;table width=&quot;410&quot; height=&quot;0&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Command:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&quot;dm/&quot;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot;&gt;Function:&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;
						&lt;td&gt;&lt;div align=&quot;center&quot;&gt;&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Removes all messages and hints from all players and the workspace&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/table&gt;
				&lt;br&gt;
				&lt;input id=&quot;Button&quot; type=&quot;button&quot; value=&quot;Back&quot; onclick=&quot;window.external.Call(&apos;back&apos;)&quot; /&gt;&lt;br /&gt;
			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
		]==])
		w:Show()
	end

	if a == &quot;back&quot; then
		w:SetBody([==[
&lt;body&gt;
	&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
		&lt;tr&gt;
			&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
				&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Script Builder&#153; Help&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Click on one of the following buttons to learn their commands.&lt;/font&gt;&lt;/p&gt;

					&lt;input type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Global&quot; onclick=&quot;window.external.Call(&apos;global&apos;)&quot;&gt;&lt;br&gt;
					&lt;input type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Edit Mode&quot; onclick=&quot;window.external.Call(&apos;edit&apos;)&quot;&gt;&lt;br&gt;
					&lt;input type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Library&quot; onclick=&quot;window.external.Call(&apos;library&apos;)&quot;&gt;&lt;br&gt;
					&lt;br&gt;
					&lt;input type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Index&quot; onclick=&quot;window.external.Call(&apos;index&apos;)&quot;&gt;&lt;br&gt;

					&lt;br&gt;&lt;br&gt;
					&lt;input type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Close&quot; onclick=&quot;window.external.Call(&apos;close&apos;)&quot;&gt;&lt;br&gt;

					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;1&quot;&gt;All commands are in SB&#153; format (&quot;[function]/[argument]/[argument]&quot;).&lt;/font&gt;&lt;/p&gt;
				&lt;/div&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;body&gt;
		]==])
		w:Show()
	end

	if a == &quot;close&quot; then
		w:Close()
	end

end)

w.DocumentComplete:connect(function ()
	w:SetBody([==[
&lt;body&gt;
	&lt;table width=&quot;420&quot; height=&quot;470&quot; border=&quot;2&quot; bordercolor=&quot;blue&quot;&gt;
		&lt;tr&gt;
			&lt;td width=&quot;490&quot; bgcolor=&quot;#000000&quot;&gt;&lt;font color=&quot;#FFFF00&quot;&gt;&amp;nbsp;
				&lt;/font&gt;&lt;div align=&quot;center&quot;&gt;
					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;6&quot;&gt;&lt;b&gt;Script Builder&#153; Help&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;

					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot;&gt;Click on one of the following buttons to learn their commands.&lt;/font&gt;&lt;/p&gt;

					&lt;input id=&quot;Button&quot; type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Global&quot; onclick=&quot;window.external.Call(&apos;global&apos;)&quot; /&gt;&lt;br&gt;
					&lt;input id=&quot;Button&quot; type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Edit Mode&quot; onclick=&quot;window.external.Call(&apos;edit&apos;)&quot; /&gt;&lt;br&gt;
					&lt;input id=&quot;Button&quot; type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Library&quot; onclick=&quot;window.external.Call(&apos;library&apos;)&quot; /&gt;&lt;br&gt;
					&lt;br&gt;
					&lt;input id=&quot;Button&quot; type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Index&quot; onclick=&quot;window.external.Call(&apos;index&apos;)&quot; /&gt;&lt;br&gt;

					&lt;br&gt;&lt;br&gt;
					&lt;input id=&quot;Button&quot; type=&quot;button&quot; style=&quot;width: 150px;&quot; value=&quot;Close&quot; onclick=&quot;window.external.Call(&apos;close&apos;)&quot; /&gt;&lt;br&gt;

					&lt;p&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;1&quot;&gt;All commands are in SB&#153; format (&quot;[function]/[argument]/[argument]&quot;).&lt;/font&gt;&lt;/p&gt;
				&lt;/div&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;body&gt;
	]==])

	w:Show()
end)

w:Navigate()
</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX44">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">dhtml</string>
				<string name="Source">local w = game:service(&quot;HtmlService&quot;):NewWindow(470,370)

Script = game.Workspace.Script

w:SetCallback(function(a) 
	print(a)
	workspace.Part.Parent = nil
end)
w.DocumentComplete:connect(function ()
	w:SetBody([==[

&lt;head&gt;
&lt;style&gt;
h1.ex1
{
position:relative;
left:20px;
}
&lt;/style&gt;
&lt;/head&gt;

&lt;script type=&quot;javascript&quot;&gt;
function bgChange(bg)
{
document.body.style.background=&apos;black&apos;
}
&lt;/script&gt;
&lt;body onload=&quot;bgChange()&quot;&gt;
&lt;h1&gt;Script Builder&lt;/h1&gt;
Script name:&lt;input id=&quot;Name&quot; type=&quot;text&quot; value=&quot;[string]&quot; style.color=&apos;yellow&apos;/&gt;
&lt;br /&gt;
&lt;br /&gt;
Source:
&lt;FORM action=&quot;http://somesite.com/prog/text-read&quot; method=&quot;post&quot;&gt;
   &lt;P&gt;
   &lt;TEXTAREA name=&quot;thetext&quot; rows=&quot;20&quot; cols=&quot;80&quot;&gt;
   First line of initial text.
   Second line of initial text.
   &lt;/TEXTAREA&gt;
   &lt;INPUT type=&quot;submit&quot; value=&quot;Send&quot;&gt;&lt;INPUT type=&quot;reset&quot;&gt;
   &lt;/P&gt;
&lt;/FORM&gt;

&lt;/body&gt;

	]==])
	w:Bind(Script, &quot;Name&quot;, &quot;Name&quot;)
	w:Bind(Script, &quot;Source&quot;, &quot;x&quot;)
	w:Show()
end)

w:Navigate()</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
	<Item class="Teams" referent="RBX45">
		<Properties>
			<string name="Name">Teams</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<Item class="ChangeHistoryService" referent="RBX46">
		<Properties>
			<string name="Name">ChangeHistoryService</string>
			<bool name="archivable">true</bool>
		</Properties>
	</Item>
	<External>RBX47</External>
	<External>RBX48</External>
</roblox>